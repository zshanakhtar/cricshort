import { index, foreignKey } from "drizzle-orm/sqlite-core";
import { matches } from "./matches";
import { createTable } from "./tableCreator";

export const battingCard = createTable(
  "batting_card",
  (d) => ({
    id: d.integer({ mode: "number" }).primaryKey({ autoIncrement: true }),
    MatchID: d.integer({ mode: "number" }),
    InningsNo: d.integer({ mode: "number" }),
    TeamID: d.integer({ mode: "number" }),
    PlayerID: d.text(),
    PlayerName: d.text(),
    PlayerImage: d.text(),
    PlayingOrder: d.integer({ mode: "number" }),
    MatchPlayingOrder: d.integer({ mode: "number" }),
    BowlerName: d.text(),
    OutDesc: d.text(),
    ShortOutDesc: d.text(),
    Runs: d.integer({ mode: "number" }),
    Balls: d.integer({ mode: "number" }),
    DotBalls: d.integer({ mode: "number" }),
    DotBallPercentage: d.text(),
    DotBallFrequency: d.text(),
    Ones: d.integer({ mode: "number" }),
    Twos: d.integer({ mode: "number" }),
    Threes: d.integer({ mode: "number" }),
    Fours: d.integer({ mode: "number" }),
    Sixes: d.integer({ mode: "number" }),
    BoundaryPercentage: d.text(),
    BoundaryFrequency: d.text(),
    StrikeRate: d.text(),
    MinOver: d.integer({ mode: "number" }),
    MinStrikerOver: d.integer({ mode: "number" }),
    WicketNo: d.text(),
    AgainstFast: d.integer({ mode: "number" }),
    AgainstSpin: d.integer({ mode: "number" }),
    AgainstFastPercent: d.text(),
    AgainstSpinPercent: d.text(),
    PLAYER_ID: d.text(),
  }),
  (t) => [
    index("batting_match_innings_team").on(t.MatchID, t.InningsNo, t.TeamID),
    foreignKey({ columns: [t.MatchID], foreignColumns: [matches.MatchID] }),
  ],
);

// {
//         "MatchID": 1855,
//         "InningsNo": 2,
//         "TeamID": 16,
//         "PlayerID": "2021-100mb00000000583-8f4c0c4491dd11",
//         "PlayerName": "Vaibhav Arora",
//         "PlayerShortName": "Vaibhav Arora",
//         "PlayerImageName": "https:\/\/scores.iplt20.com\/ipl\/playerimages\/xJwqLrId4s1742551886583.png",
//         "PlayerImage": "https:\/\/scores.iplt20.com\/ipl\/playerimages\/xJwqLrId4s1742551886583.png",
//         "Overs": 3,
//         "Maidens": 0,
//         "Runs": 48,
//         "Wickets": 3,
//         "Wides": 2,
//         "NoBalls": 0,
//         "Economy": 16,
//         "BowlingOrder": 1,
//         "TotalLegalBallsBowled": 18,
//         "ScoringBalls": 13,
//         "DotBalls": 7,
//         "DBPercent": "38.89",
//         "DBFrequency": "2.57",
//         "Ones": 2,
//         "Twos": 1,
//         "Threes": 0,
//         "Fours": 3,
//         "Sixes": 5,
//         "BdryPercent": "87.50",
//         "BdryFreq": "2.25",
//         "StrikeRate": "6.00",
//         "FourPercent": "25.00",
//         "SixPercent": "62.50"
//       },

export const bowlingCard = createTable(
  "bowling_card",
  (d) => ({
    id: d.integer({ mode: "number" }).primaryKey({ autoIncrement: true }),
    MatchID: d.integer({ mode: "number" }),
    InningsNo: d.integer({ mode: "number" }),
    TeamID: d.integer({ mode: "number" }),
    PlayerID: d.text(),
    PlayerName: d.text(),
    PlayerShortName: d.text(),
    PlayerImageName: d.text(),
    PlayerImage: d.text(),
    Overs: d.integer({ mode: "number" }),
    Maidens: d.integer({ mode: "number" }),
    Runs: d.integer({ mode: "number" }),
    Wickets: d.integer({ mode: "number" }),
    Wides: d.integer({ mode: "number" }),
    NoBalls: d.integer({ mode: "number" }),
    Economy: d.integer({ mode: "number" }),
    BowlingOrder: d.integer({ mode: "number" }),
    TotalLegalBallsBowled: d.integer({ mode: "number" }),
    ScoringBalls: d.integer({ mode: "number" }),
    DotBalls: d.integer({ mode: "number" }),
    DBPercent: d.text(),
    DBFrequency: d.text(),
    Ones: d.integer({ mode: "number" }),
    Twos: d.integer({ mode: "number" }),
    Threes: d.integer({ mode: "number" }),
    Fours: d.integer({ mode: "number" }),
    Sixes: d.integer({ mode: "number" }),
    BdryPercent: d.text(),
    BdryFreq: d.text(),
    StrikeRate: d.text(),
    FourPercent: d.text(),
    SixPercent: d.text(),
  }),
  (t) => [
    index("bowling_match_innings_team").on(t.MatchID, t.InningsNo, t.TeamID),
    foreignKey({ columns: [t.MatchID], foreignColumns: [matches.MatchID] }),
  ],
);

export const extras = createTable(
  "extras",
  (d) => ({
    id: d.integer({ mode: "number" }).primaryKey({ autoIncrement: true }),
    MatchID: d.text(),
    InningsNo: d.text(),
    TeamID: d.text(),
    Total: d.text(),
    TotalExtras: d.text(),
    Byes: d.text(),
    LegByes: d.text(),
    NoBalls: d.text(),
    Wides: d.text(),
    Penalty: d.text(),
    CurrentRunRate: d.text(),
    FallScore: d.text(),
    FallWickets: d.text(),
    FallOvers: d.text(),
    BattingTeamName: d.text(),
    BowlingTeamName: d.text(),
    MaxPartnerShipRuns: d.text(),
  }),
  (t) => [
    index("extras_match_innings_team").on(t.MatchID, t.InningsNo, t.TeamID),
    foreignKey({ columns: [t.MatchID], foreignColumns: [matches.MatchID] }),
  ],
);

export const partnershipScore = createTable(
  "partnership_score",
  (d) => ({
    id: d.integer({ mode: "number" }).primaryKey({ autoIncrement: true }),
    MatchID: d.text(),
    BattingTeamID: d.text(),
    InningsNo: d.text(),
    StrikerID: d.text(),
    Striker: d.text(),
    NonStrikerID: d.text(),
    NonStriker: d.text(),
    PartnershipTotal: d.text(),
    StrikerRuns: d.text(),
    StrikerBalls: d.text(),
    Extras: d.text(),
    NonStrikerRuns: d.text(),
    NonStrikerBalls: d.text(),
    MatchMaxOver: d.text(),
    MatchMinOver: d.text(),
    RowNumber: d.text(),
  }),
  (t) => [
    index("partnership_match_innings_team").on(
      t.MatchID,
      t.InningsNo,
      t.BattingTeamID,
    ),
    foreignKey({ columns: [t.MatchID], foreignColumns: [matches.MatchID] }),
  ],
);
